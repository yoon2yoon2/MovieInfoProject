<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

   <!-- 어떤 요청이 들어오면 spring Security filter가 가로채서 인증과 어떤 권한을 체크할 것인지 설정
   		use-expressions=true 설정
   		: SpEL을 사용할 수 있도록 설정
   	 -->
   <security:http auto-config="true" use-expressions="true">
   	<security:intercept-url pattern="/user/login" access="hasRole('ROLE_USER')"/>
   	<security:intercept-url pattern="/member/**" access="isAuthenticated()"/>
   	<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
   	<!-- 	default-target-url="/"	그냥루트는 index페이지로 이동 -->
   	<security:form-login
   		login-page="/user/loginForm"
   		login-processing-url="/loginCheck"
   		username-parameter="userid"
   		password-parameter="userpass"
   		default-target-url="/"	
   		authentication-failure-url="/user/loginForm?error"
   	/>
   	<security:logout
   		logout-url="/logout"
   		invalidate-session="true"
   		delete-cookies="JSESSIONID"
   		logout-success-url="/"
   	/>
   </security:http>


   <!-- in Memory : 계정에 따른 권한을 설정한다. -->
   <security:authentication-manager>
      <security:authentication-provider>
         <security:user-service>
         <security:user name="user" password="1234"
               authorities="ROLE_USER" />
            <security:user name="heo" password="1234"
               authorities="ROLE_MEMBER" />
            <security:user name="admin" password="1234"
               authorities="ROLE_USER,ROLE_ADMIN,ROLE_MEMBER"/>
         </security:user-service>
      </security:authentication-provider>
   </security:authentication-manager>

</beans>